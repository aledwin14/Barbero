//Algoritmo para solución de problema del barbero dormilón
//Edwin Alexander Peña G.
//Edison Fernando Peña G.

Semáforo barberoListo = 0     // (Mutex, sólo 1 o 0) 
 Semáforo sillasAccesibles = 1 // (Mutex) Cuando sea 1, el número de sillas libres puede aumentar o disminuir
 Semáforo clientes = 0         // Número de clientes en la sala de espera
 int sillasLibres = N          // N es el número total de sillas

 while(true)                   // Ciclo infinito
 {
    wait(clientes)             // Espera la señal de un hilo cliente para despertar.
    wait(sillasAccesibles)     // (Ya está despierto) Espera señal para poder modificar sillasLibres.
    sillasLibres += 1          // Aumenta en uno el número de sillas libres.
    signal(barberoListo)       // El barbero está listo para cortar y manda señal al hilo cliente.
    signal(sillasAccesibles)   // Manda señal para desbloquear el acceso a sillasLibres
    // Aquí el barbero corta el pelo de un cliente (zona de código no crítico).
 }

 wait(sillasAccesibles)       // Espera la señal para poder acceder a sillasLibres.
 if (sillasLibres > 0)        // Si hay alguna silla libre, se sienta en una.
 {
    sillasLibres -= 1         // Decrementando el valor de sillasLibres en 1.
    signal(clientes)          // Manda señal al barbero de que hay un cliente disponible.
    signal(sillasAccesibles)  // Manda señal para desbloquear el acceso a sillasLibres.
    wait(barberoListo)        // El cliente espera a que el barbero esté listo para atenderlo.
    // Se le corta el pelo al cliente.
 }
 else                         // Si no hay sillas libres.
 {  
    signal(sillasAccesibles)  // Manda señal para desbloquear el acceso a sillasLibres.
    // El cliente se va de la barbería y no manda la señal de cliente disponible.
 }
